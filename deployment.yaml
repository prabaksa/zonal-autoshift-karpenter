apiVersion: v1
kind: ServiceAccount
metadata:
  name: karpenter-sns-subscriber
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: karpenter-sns-subscriber-role
rules:
  - apiGroups: ["karpenter.sh"]
    resources: ["nodepools"]
    verbs: ["get", "list", "update", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: karpenter-sns-subscriber-binding
subjects:
  - kind: ServiceAccount
    name: karpenter-sns-subscriber
    namespace: default
roleRef:
  kind: ClusterRole
  name: karpenter-sns-subscriber-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: karpenter-sns-subscriber
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: karpenter-sns-subscriber
  template:
    metadata:
      labels:
        app: karpenter-sns-subscriber
    spec:
      serviceAccountName: karpenter-sns-subscriber
      containers:
        - name: karpenter-sns-subscriber
          image: jicowan/karpenter-sns-subscriber:latest
          volumeMounts:
            - name: log-volume
              mountPath: /var/log
          ports:
            - containerPort: 8080
          env:
            - name: AWS_REGION
              value: "us-west-2"
          imagePullPolicy: Always
      volumes:
        - name: log-volume
          emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: karpenter-sns-subscriber
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  selector:
    app: karpenter-sns-subscriber
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer